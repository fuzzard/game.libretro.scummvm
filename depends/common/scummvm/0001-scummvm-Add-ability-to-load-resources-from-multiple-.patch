From 39177c1103df2ee5fdc04efcd571f737fb8844b1 Mon Sep 17 00:00:00 2001
From: Christian Fetzer <fetzer.ch@gmail.com>
Date: Sun, 13 Nov 2016 12:10:58 +0100
Subject: [PATCH 1/1] scummvm: Add ability to load resources from multiple
 directories

Implement RETRO_ENVIRONMENT_GET_RESOURCE_DIRECTORY to support multiple
directories where engine-data or theme files are read from.
---
 backends/platform/libretro/libretro.cpp | 13 +++++++++++++
 backends/platform/libretro/libretro.h   | 13 +++++++++++++
 backends/platform/libretro/os.cpp       |  8 +++++++-
 backends/platform/libretro/os.h         |  1 +
 4 files changed, 34 insertions(+), 1 deletion(-)

diff --git a/backends/platform/libretro/libretro.cpp b/backends/platform/libretro/libretro.cpp
index b8323834..fce8f5d1 100644
--- a/backends/platform/libretro/libretro.cpp
+++ b/backends/platform/libretro/libretro.cpp
@@ -387,6 +387,19 @@ bool retro_load_game(const struct retro_game_info *game)
       retroSetSaveDir(".");
    }
 
+   Common::String dataFile = "access.dat";
+   struct retro_resource res = { dataFile.c_str() };
+   if(environ_cb(RETRO_ENVIRONMENT_GET_RESOURCE_DIRECTORY, &res))
+   {
+      retroSetDataDir(res.base_directory);
+   }
+   else
+   {
+      if (log_cb)
+         log_cb(RETRO_LOG_WARN, "No data directory specified, using current directory.\n");
+      retroSetDataDir(".");
+   }
+
    if(!emuThread && !mainThread)
    {
       mainThread = co_active();
diff --git a/backends/platform/libretro/libretro.h b/backends/platform/libretro/libretro.h
index 16c274a1..2ab79e59 100755
--- a/backends/platform/libretro/libretro.h
+++ b/backends/platform/libretro/libretro.h
@@ -852,6 +852,19 @@ enum retro_mod
                                             * It can be used by the core for localization purposes.
                                             */
 
+struct retro_resource
+{
+   const char *rel_path;
+   const char *base_directory;
+};
+
+#define RETRO_ENVIRONMENT_GET_RESOURCE_DIRECTORY 99
+                                           /* struct retro_resource * --
+                                            * Interface to acquire resource paths by a relative filename.
+                                            * 'rel_path' should be set to a filename relative to the system directory.
+                                            * 'base_directory' will be set to the base path containing the resource or NULL if unknown.
+                                            */
+
 #define RETRO_MEMDESC_CONST     (1 << 0)   /* The frontend will never change this memory area once retro_load_game has returned. */
 #define RETRO_MEMDESC_BIGENDIAN (1 << 1)   /* The memory area contains big endian data. Default is little endian. */
 #define RETRO_MEMDESC_ALIGN_2   (1 << 16)  /* All memory access in this area is aligned to their own size, or 2, whichever is smaller. */
diff --git a/backends/platform/libretro/os.cpp b/backends/platform/libretro/os.cpp
index c37171e3..cf6608f4 100644
--- a/backends/platform/libretro/os.cpp
+++ b/backends/platform/libretro/os.cpp
@@ -251,6 +251,7 @@ static INLINE void copyRectToSurface(uint8_t *pixels, int out_pitch, const uint8
 
 static Common::String s_systemDir;
 static Common::String s_saveDir;
+static Common::String s_dataDir;
 
 #ifdef FRONTEND_SUPPORTS_RGB565
 #define SURF_BPP 2
@@ -725,7 +726,7 @@ class OSystem_RETRO : public EventsBaseBackend, public PaletteManager {
 
       virtual void addSysArchivesToSearchSet(Common::SearchSet &s, int priority = 0)
       {
-         // TODO: NOTHING?
+         s.add("data-dir", new Common::FSDirectory(s_dataDir), priority);
       }
 
       virtual void getTimeAndDate(TimeDate &t) const
@@ -1246,6 +1247,11 @@ void retroSetSaveDir(const char* aPath)
    s_saveDir = Common::String(aPath ? aPath : ".");
 }
 
+void retroSetDataDir(const char* aPath)
+{
+   s_dataDir = Common::String(aPath ? aPath : ".");
+}
+
 void retroKeyEvent(bool down, unsigned keycode, uint32_t character, uint16_t key_modifiers)
 {
    ((OSystem_RETRO*)g_system)->processKeyEvent(down, keycode, character, key_modifiers);
diff --git a/backends/platform/libretro/os.h b/backends/platform/libretro/os.h
index 05ffeed1..014b1f04 100644
--- a/backends/platform/libretro/os.h
+++ b/backends/platform/libretro/os.h
@@ -50,6 +50,7 @@ void retroPostQuit();
 
 void retroSetSystemDir(const char* aPath);
 void retroSetSaveDir(const char* aPath);
+void retroSetDataDir(const char* aPath);
 
 void retroKeyEvent(bool down, unsigned keycode, uint32_t character, uint16_t key_modifiers);
 
-- 
2.11.0

